{% extends "base_website.jinja" %}

{% block headers %}
<script type="text/javascript" src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"></script>
<style>
    {% include "_edit_story_lambda.css" %}
</style>
{% endblock headers %}

{% block content %}
<section class="fullheight">
<div class="columns">
    <div id="mynetwork" class="column column is-three-fifths is-offset-one-fifth"></div>
</div>
<div id="edit_windows">
    {% for chapter in chapters %}
    {% if chapter.id == current_chapter_id %}
    <div class="edit-window edit-window-clicked" id="edit-window-{{chapter.id}}">
    {% else %}
    <div class="edit-window" id="edit-window-{{chapter.id}}">
    {% endif %}
        <div class="block">
            <div class='card equal-height'>
                <div class="card-image has-text-centered">
                    <figure class="image is-inline-block">
                        <img src="{{chapter.image}}" loading="lazy">
                    </figure>
                </div>
            </div>
        </div>
        <div class="columns is-centered">
            <div class="column is-half">
                <div class="block"> 
                    <form action="update_story" method="get">
                        <h1>Edit chapter</h1>
                        <div class="field">
                            <label class="label" for="chapter_text">Chapter text: </label>
                            <div class="control">
                                <textarea class="textarea"  id="chapter_text" name="chapter_text">{{chapter.text}}</textarea>
                            </div>
                        </div>

                        <div class="card is-fullwidth">
                            <header class="card-header">
                                <p class="card-header-title">Edit available choices</p>
                                <a class="card-header-icon card-toggle">
                                    <i class="fa fa-angle-down"></i>
                                </a>
                            </header>

                            <div class="card-content is-hidden">
                                <div class="content">
                                    {% for option_id, option_text in chapter.options.items() %}

                                    <div class="field">
                                        <label class="label" for="option_{{option_id}}">Choice leading to chapter {{option_id}}:</label>
                                        <div class="control">
                                            <textarea class="textarea"  id="option_{{option_id}}" name="option_{{option_id}}">{{option_text}}</textarea>
                                        </div>
                                    </div>
                                    {% endfor %}    

                                </div>
                            </div>
                        </div>
                        
                        <div class="card is-fullwidth">
                            <header class="card-header">
                                <p class="card-header-title">Edit available choices</p>
                                <a class="card-header-icon card-toggle">
                                    <i class="fa fa-angle-down"></i>
                                </a>
                            </header>

                            <div class="card-content is-hidden">
                                <div class="content">
                                    <div class="field">
                                        <label class="label" for="new_option">New choice text:</label>
                                        <div class="control">
                                            <textarea class="textarea"  id="new_option_text" name="new_option_text" placeholder="What new option do you want to add?"></textarea>
                                        </div>
                                    </div>
                                    <div class="field">
                                        <label class="label" for="new_option_id">Chapter which the new option should lead to, leave as is to create a new chapter or set it to a another chapter to link them together:</label>
                                        <div class="control">
                                            <input class="text"  id="new_option_id" name="new_option_id" placeholder="{{new_option_id}}">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <input type="hidden" name="story_id" value={{story_name}} class="hidden">
                        <input type="hidden" name="chapter_id" value={{chapter.id}} class="hidden">
                        <input type="hidden" name="unused_chapter_id" value="{{new_option_id}}" class="hidden">
                        <div class="field is-grouped">
                            <div class="control">
                                <button class="button is-link">Submit</button>
                            </div>
                            {# <div class="control">
                                <button class="button is-link is-light">Cancel</button>
                            </div> #}
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    {% endfor %}
</div>
</section>
<script type="text/javascript">
    // create an array with nodes
    var nodes = new vis.DataSet([
    {{ nodes }}
    ]);

    // create an array with edges
    var edges = new vis.DataSet([
    {{ edges }}
    ]);

    // create a network
    var container = document.getElementById("mynetwork");
    var data = {
        nodes: nodes,
        edges: edges,
    };
    var options = { layout: { randomSeed: 1994 } };
    var network = new vis.Network(container, data, options);
    network.selectNodes([{{ selected_node }}]);

    network.on('click', function (properties) {
        var ids = properties.nodes;
        var clickedNodes = nodes.get(ids);
        console.log('clicked nodes:', clickedNodes);
        if (clickedNodes.length == 1) {
            console.log("clicked node:", "edit-window-" + clickedNodes[0].id)
            var clicked = document.getElementById("edit-window-" + clickedNodes[0].id);
            //clicked.style.setProperty("display", "block", "!important")
        }
        var clickedClassName = "edit-window-clicked"
        var previouslyClicked = document.getElementsByClassName(clickedClassName);
        if (previouslyClicked.length == 1) {
            //previouslyClicked[0].style.setProperty("display", "none", "!important");
            previouslyClicked[0].classList.remove(clickedClassName);
        }
        clicked.classList.add(clickedClassName);
    });


    // hide options initially when editing them
    document.addEventListener('DOMContentLoaded', function() {
        let cardToggles = document.getElementsByClassName('card-toggle');
        for (let i = 0; i < cardToggles.length; i++) {
            cardToggles[i].addEventListener('click', e => {
                e.currentTarget.parentElement.parentElement.childNodes[3].classList.toggle('is-hidden');
            });
        }
    });

</script>
{% endblock content %}